
@article{li_pairwise_2021,
	title = {Pairwise Symmetry Reasoning for Multi-Agent Path Finding Search},
	volume = {301},
	issn = {00043702},
	url = {https://linkinghub.elsevier.com/retrieve/pii/S0004370221001259},
	doi = {10.1016/j.artint.2021.103574},
	abstract = {Empirically, although many of the A* and ICTS variants are competitive with vanilla CBS [31], they are shown to be worse than CBSH with the symmetry reasoning technique for rectangle conﬂicts in our ICAPS 2019 paper [20]. This is not surprising because, as the number of agents increases, the effectiveness of the speedup techniques mentioned in the previous two paragraphs is limited, and thus they all suffer from the explosion of the joint-state space.},
	language = {en},
	urldate = {2023-08-10},
	journal = {Artificial Intelligence},
	author = {Li, Jiaoyang and Harabor, Daniel and Stuckey, Peter J. and Ma, Hang and Gange, Graeme and Koenig, Sven},
        pages={103574},
	month = Dec,
	year = {2021},
	file = {Li et al. - 2021 - Pairwise symmetry reasoning for multi-agent path f.pdf:/Users/andrewsu/Zotero/storage/WPWHZB3K/Li et al. - 2021 - Pairwise symmetry reasoning for multi-agent path f.pdf:application/pdf},
}

@inproceedings{paul_fast_2023,
    author = {Paul, Adittyo and Feng, Ying and Li, Jiaoyang},
    title = {A {Fast} {Rescheduling} {Algorithm} for {Real}-{Time} {Multi}-{Robot} {Coordination} [{Extended} {Abstract}]},
    booktitle = {Proceedings of the International Symposium on Combinatorial Search},
    year = 2023,
    volume = {16},
    pages = {175-176},
}{paul_fast_2023,
    title = {A {Fast} {Rescheduling} {Algorithm} for {Real}-{Time} {Multi}-{Robot} {Coordination} [{Extended} {Abstract}]},
    author = {Paul, Adittyo and Feng, Ying and Li, Jiaoyang},
    year = {2023}
}{paul_fast_2023,
	title = {A {Fast} {Rescheduling} {Algorithm} for {Real}-{Time} {Multi}-{Robot} {Coordination} [{Extended} {Abstract}]},
	volume = {16},
	issn = {2832-9163, 2832-9171},
	url = {https://ojs.aaai.org/index.php/SOCS/article/view/27301},
	doi = {10.1609/socs.v16i1.27301},
	abstract = {One area of research in Multi-Agent Path Finding (MAPF) is to determine how re-planning can be efficiently achieved in the case of the delay of an agent.  One option is to determine a new wait ordering to find the most optimal new solution that can be produced by re-ordering the wait order. We propose to use an Edge-Switchable Temporal Plan Graph and an augmented A* algorithm, called Switchable-Edge Search, to approach finding a new optimal wait order. While this is a work in progress still, we have discovered several optimizations for this algorithm, and the results show promising increases in efficiency for the algorithm. We have analyzed our present efficiency in a variety of conditions by measuring re-planning speed in different maps, with varying numbers of agents and randomized scenarios for agents' start and goal locations. We hope that, as we proceed with optimization, we can show that such an approach can be more efficient in practice and be used instead of re-running MAPF to perform cheap re-planning in such situations.},
	language = {en},
	number = {1},
	urldate = {2023-08-10},
	journal = {Proceedings of the International Symposium on Combinatorial Search},
	author = {Paul, Adittyo and Feng, Ying and Li, Jiaoyang},
	month = jul,
	year = {2023},
	pages = {175--176},
	file = {Paul et al. - 2023 - A Fast Rescheduling Algorithm for Real-Time Multi-.pdf:/Users/andrewsu/Zotero/storage/ZXHM9L6I/Paul et al. - 2023 - A Fast Rescheduling Algorithm for Real-Time Multi-.pdf:application/pdf},
}

@inproceedings{berndt_feedback_2020,
    author = {Alexander Berndt and Niels Van Duijkeren and Luigi Palmieri and Tamas Keviczky},
    title = {A {Feedback} {Scheme} to {Reorder} a {Multi}-{Agent} {Execution} {Schedule} by {Persistently} {Optimizing} a {Switchable} {Action} {Dependency} {Graph}},
    booktitle = {ICAPS workshop on Distributed and Multi-Agent Planning},
    year = {2020}
}{berndt_feedback_2020,
	title = {A {Feedback} {Scheme} to {Reorder} a {Multi}-{Agent} {Execution} {Schedule} by {Persistently} {Optimizing} a {Switchable} {Action} {Dependency} {Graph}},
	abstract = {In this paper we consider multiple Automated Guided Vehicles (AGVs) navigating a common workspace to fulﬁll various intralogistics tasks, typically formulated as the MultiAgent Path Finding (MAPF) problem. To keep plan execution deadlock-free, one approach is to construct an Action Dependency Graph (ADG) which encodes the ordering of AGVs as they proceed along their routes. Using this method, delayed AGVs occasionally require others to wait for them at intersections, thereby affecting the plan execution efﬁciency. If the workspace is shared by dynamic obstacles such as humans or third party robots, AGVs can experience large delays. A common mitigation approach is to re-solve the MAPF using the current, delayed AGV positions. However, solving the MAPF is time-consuming, making this approach inefﬁcient, especially for large AGV teams. In this work, we present an online method to repeatedly modify a given acyclic ADG to minimize the cumulative AGV route completion times. Our approach persistently maintains an acyclic ADG, necessary for deadlock-free plan execution. We evaluate the approach by considering simulations with random disturbances on the execution and show faster route completion times compared to the baseline ADG-based execution management approach.},
	language = {en},
	author = {Berndt, Alexander},
        year = {2020},
	file = {Berndt - A Feedback Scheme to Reorder a Multi-Agent Executi.pdf:/Users/andrewsu/Zotero/storage/6KXXVLUS/Berndt - A Feedback Scheme to Reorder a Multi-Agent Executi.pdf:application/pdf},
}

@inproceedings{pecora_loosely-coupled_2018,
    author = {Pecora, Federico and Andreasson, Henrik and Mansouri, Masoumeh and Petkov, Vilian},
    title = {A {Loosely}-{Coupled} {Approach} for {Multi}-{Robot} {Coordination}, {Motion} {Planning} and {Control}},
    booktitle = {Proceedings of the International Conference on Automated Planning and Scheduling},
    year = {2018},
    volume = {28},
    pages = {485--493},
}{pecora_loosely-coupled_2018,
	title = {A {Loosely}-{Coupled} {Approach} for {Multi}-{Robot} {Coordination}, {Motion} {Planning} and {Control}},
	volume = {28},
	issn = {2334-0843, 2334-0835},
	url = {https://ojs.aaai.org/index.php/ICAPS/article/view/13923},
	doi = {10.1609/icaps.v28i1.13923},
	abstract = {Deploying ﬂeets of autonomous robots in real-world applications requires addressing three problems: motion planning, coordination, and control. Application-speciﬁc features of the environment and robots often narrow down the possible motion planning and control methods that can be used. This paper proposes a lightweight coordination method that implements a high-level controller for a ﬂeet of potentially heterogeneous robots. Very few assumptions are made on robot controllers, which are required only to be able to accept set point updates and to report their current state. The approach can be used with any motion planning method for computing kinematically-feasible paths. Coordination uses heuristics to update priorities while robots are in motion, and a simple model of robot dynamics to guarantee dynamic feasibility. The approach avoids a priori discretization of the environment or of robot paths, allowing robots to “follow each other” through critical sections. We validate the method formally and experimentally with different motion planners and robot controllers, in simulation and with real robots.},
	language = {en},
	urldate = {2023-08-10},
	journal = {Proceedings of the International Conference on Automated Planning and Scheduling},
	author = {Pecora, Federico and Andreasson, Henrik and Mansouri, Masoumeh and Petkov, Vilian},
	month = jun,
	year = {2018},
	pages = {485--493},
	file = {Pecora et al. - 2018 - A Loosely-Coupled Approach for Multi-Robot Coordin.pdf:/Users/andrewsu/Zotero/storage/F7BRBRXE/Pecora et al. - 2018 - A Loosely-Coupled Approach for Multi-Robot Coordin.pdf:application/pdf},
}

@inproceedings{lam_new_2020,
    author = {Lam, Edward and Le Bodic, Pierre},
    title = {New {Valid} {Inequalities} in {Branch}-and-{Cut}-and-{Price} for {Multi}-{Agent} {Path} {Finding}},
    booktitle = {Proceedings of the International Conference on Automated Planning and Scheduling},
    year = {2020},
    volume = {30},
    pages = {184--192},
}{lam_new_2020,
	title = {New {Valid} {Inequalities} in {Branch}-and-{Cut}-and-{Price} for {Multi}-{Agent} {Path} {Finding}},
	volume = {30},
	issn = {2334-0843, 2334-0835},
	url = {https://ojs.aaai.org/index.php/ICAPS/article/view/6660},
	doi = {10.1609/icaps.v30i1.6660},
	abstract = {BCP, a state-of-the-art algorithm for optimal Multi-agent Path Finding, uses the branch-and-cut-and-price framework to decompose the problem into (1) a master problem that selects a set of collision-free low-cost paths, (2) a pricing problem that adds lower-cost paths to the master problem, (3) separation problems that resolve various kinds of conﬂicts in the master problem, and (4) branching rules that split the nodes in the high-level branch-and-bound search tree. This paper focuses on the separation aspects of the decomposition by introducing ﬁve new classes of fractional conﬂicts and valid inequalities that remove these conﬂicts to tighten the linear programming relaxation in the master problem. Experimental results on 12820 instances across 16 maps indicate that including the ﬁve families of inequalities allows BCP to solve an additional 585 instances, optimize the same instances 41\% faster, and solve 2068 more instances than CBSH-RM and 157 more than Lazy CBS.},
	language = {en},
	urldate = {2023-08-10},
	journal = {Proceedings of the International Conference on Automated Planning and Scheduling},
	author = {Lam, Edward and Le Bodic, Pierre},
	month = jun,
	year = {2020},
	pages = {184--192},
	file = {Lam and Le Bodic - 2020 - New Valid Inequalities in Branch-and-Cut-and-Price.pdf:/Users/andrewsu/Zotero/storage/HJ3JSJQA/Lam and Le Bodic - 2020 - New Valid Inequalities in Branch-and-Cut-and-Price.pdf:application/pdf},
}

@article{sharon_conflict-based_2015,
	title = {Conflict-Based Search for Optimal Multi-Agent Pathfinding},
	volume = {219},
	issn = {00043702},
	url = {https://linkinghub.elsevier.com/retrieve/pii/S0004370214001386},
	doi = {10.1016/j.artint.2014.11.006},
	language = {en},
	urldate = {2023-08-10},
	journal = {Artificial Intelligence},
	author = {Sharon, Guni and Stern, Roni and Felner, Ariel and Sturtevant, Nathan R.},
	month = feb,
	year = {2015},
	pages = {40--66},
	file = {Sharon et al. - 2015 - Conflict-based search for optimal multi-agent path.pdf:/Users/andrewsu/Zotero/storage/NN8H4QKN/Sharon et al. - 2015 - Conflict-based search for optimal multi-agent path.pdf:application/pdf},
}

@inproceedings{coskun_deadlock-free_2021,
    author = {Coskun, Adem and O'Kane, Jason and Valtorta, Marco},
    title = {Deadlock-{Free} {Online} {Plan} {Repair} in {Multi}-Robot {Coordination} with {Disturbances}},
    booktitle = {Proceedings of the International FLAIRS Conference},
    year = {2021},
    volume = {34},

}{coskun_deadlock-free_2021,
	title = {Deadlock-{Free} {Online} {Plan} {Repair} in {Multi}-robot {Coordination} with {Disturbances}},
	volume = {34},
	issn = {2334-0762},
	url = {https://journals.flvc.org/FLAIRS/article/view/128371},
	doi = {10.32473/flairs.v34i1.128371},
	abstract = {Multirobot systems are increasingly deployed in environments where they interact with humans. From the perspective of a robot, such interaction could be considered a disturbance that causes a well-planned trajectory to fail. Previous approaches that modify trajectories in the presence of disturbances rearrange the order in which robots pass collision regions and other obstacles, in the laudable attempt to improve the average travel time for all robots. By doing so, however, deadlock may arise. In this paper, we provide a precise deﬁnition of deadlock using a graphical representation and prove some of its important properties. We show how to exploit the representation to detect the possibility of deadlock and to characterize conditions under which deadlock may not occur. We provide experiments in simulated environments that illustrate the potential usefulness of our theory of deadlock.},
	language = {en},
	number = {1},
	urldate = {2023-08-10},
	journal = {The International FLAIRS Conference Proceedings},
	author = {Coskun, Adem and O'Kane, Jason and Valtorta, Marco},
	month = apr,
	year = {2021},
	file = {Coskun et al. - 2021 - Deadlock-Free Online Plan Repair in Multi-robot Co.pdf:/Users/andrewsu/Zotero/storage/BVFEQRVK/Coskun et al. - 2021 - Deadlock-Free Online Plan Repair in Multi-robot Co.pdf:application/pdf},
}

@inproceedings{stern_multi-agent_2021,
    author = {Stern, Roni and Sturtevant, Nathan and Felner, Ariel and Koenig, Sven and Ma, Hang and Walker, Thayne and Li, Jiaoyang and Atzmon, Dor and Cohen, Liron and Kumar, T. K. and Barták, Roman and Boyarski, Eli},
    title = {Multi-{Agent} {Pathfinding}: {Definitions}, {Variants}, and {Benchmarks}},
    booktitle = {Proceedings of the International Symposium on Combinatorial Search},
    year = {2019},
    volume = {10},
    pages = {151--158},
}{stern_multi-agent_2021,
	title = {Multi-{Agent} {Pathfinding}: {Definitions}, {Variants}, and {Benchmarks}},
	volume = {10},
	issn = {2832-9163, 2832-9171},
	shorttitle = {Multi-{Agent} {Pathfinding}},
	url = {https://ojs.aaai.org/index.php/SOCS/article/view/18510},
	doi = {10.1609/socs.v10i1.18510},
	abstract = {The Multi-Agent Pathﬁnding (MAPF) problem is the fundamental problem of planning paths for multiple agents, where the key constraint is that the agents will be able to follow these paths concurrently without colliding with each other. Applications of MAPF include automated warehouses and autonomous vehicles. Research on MAPF has been ﬂourishing in the past couple of years. Different MAPF research papers make different assumptions, e.g., whether agents can traverse the same road at the same time, and have different objective functions, e.g., minimize makespan or sum of agents’ actions costs. These assumptions and objectives are sometimes implicitly assumed or described informally. This makes it difﬁcult to establish appropriate baselines for comparison in research papers, as well as making it difﬁcult for practitioners to ﬁnd the papers relevant to their concrete application. This paper aims to ﬁll this gap and support researchers and practitioners by providing a unifying terminology for describing common MAPF assumptions and objectives. In addition, we also provide pointers to two MAPF benchmarks. In particular, we introduce a new grid-based benchmark for MAPF, and demonstrate experimentally that it poses a challenge to contemporary MAPF algorithms.},
	language = {en},
	number = {1},
	urldate = {2023-08-10},
	journal = {Proceedings of the International Symposium on Combinatorial Search},
	author = {Stern, Roni and Sturtevant, Nathan and Felner, Ariel and Koenig, Sven and Ma, Hang and Walker, Thayne and Li, Jiaoyang and Atzmon, Dor and Cohen, Liron and Kumar, T. K. and Barták, Roman and Boyarski, Eli},
	month = sep,
	year = {2019},
	pages = {151--158},
	file = {Stern et al. - 2021 - Multi-Agent Pathfinding Definitions, Variants, an.pdf:/Users/andrewsu/Zotero/storage/4BIED6FF/Stern et al. - 2021 - Multi-Agent Pathfinding Definitions, Variants, an.pdf:application/pdf},
}

@article{honig_trajectory_2018,
	title = {Trajectory {Planning} for {Quadrotor} {Swarms}},
	volume = {34},
	issn = {1552-3098, 1941-0468},
	url = {https://ieeexplore.ieee.org/document/8424034/},
	doi = {10.1109/TRO.2018.2853613},
	abstract = {We describe a method for multirobot trajectory planning in known, obstacle-rich environments. We demonstrate our approach on a quadrotor swarm navigating in a warehouse setting. Our method consists of following three stages: 1) roadmap generation that generates sparse roadmaps annotated with possible interrobot collisions; 2) discrete planning that ﬁnds valid execution schedules in discrete time and space; 3) continuous reﬁnement that creates smooth trajectories. We account for the downwash effect of quadrotors, allowing safe ﬂight in dense formations. We demonstrate computational efﬁciency in simulation with up to 200 robots and physical plausibility with an experiment on 32 nano-quadrotors. Our approach can compute safe and smooth trajectories for hundreds of quadrotors in dense environments with obstacles in a few minutes.},
	language = {en},
	number = {4},
	urldate = {2023-08-10},
	journal = {IEEE Transactions on Robotics},
	author = {Honig, Wolfgang and Preiss, James A. and Kumar, T. K. Satish and Sukhatme, Gaurav S. and Ayanian, Nora},
	month = aug,
	year = {2018},
	pages = {856--869},
	file = {Honig et al. - 2018 - Trajectory Planning for Quadrotor Swarms.pdf:/Users/andrewsu/Zotero/storage/DUHUFKW4/Honig et al. - 2018 - Trajectory Planning for Quadrotor Swarms.pdf:application/pdf},
}

@inproceedings{li_eecbs_2021,
    author = {Li, Jiaoyang and Ruml, Wheeler and Koenig, Sven},
    title = {{EECBS}: {A} {Bounded}-{Suboptimal} {Search} for {Multi}-{Agent} {Path} {Finding}},
    booktitle = {Proceedings of the AAAI Conference on Artificial Intelligence},
    year = {2021},
    volume = {35},
    pages = {12353--12362},
}{li_eecbs_2021,
	title = {{EECBS}: {A} {Bounded}-{Suboptimal} {Search} for {Multi}-{Agent} {Path} {Finding}},
	volume = {35},
	issn = {2374-3468, 2159-5399},
	shorttitle = {{EECBS}},
	url = {https://ojs.aaai.org/index.php/AAAI/article/view/17466},
	doi = {10.1609/aaai.v35i14.17466},
	abstract = {Multi-Agent Path Finding (MAPF), i.e., ﬁnding collision-free paths for multiple robots, is important for many applications where small runtimes are necessary, including the kind of automated warehouses operated by Amazon. CBS is a leading two-level search algorithm for solving MAPF optimally. ECBS is a bounded-suboptimal variant of CBS that uses focal search to speed up CBS by sacriﬁcing optimality and instead guaranteeing that the costs of its solutions are within a given factor of optimal. In this paper, we study how to decrease its runtime even further using inadmissible heuristics. Motivated by Explicit Estimation Search (EES), we propose Explicit Estimation CBS (EECBS), a new bounded-suboptimal variant of CBS, that uses online learning to obtain inadmissible estimates of the cost of the solution of each high-level node and uses EES to choose which high-level node to expand next. We also investigate recent improvements of CBS and adapt them to EECBS. We ﬁnd that EECBS with the improvements runs signiﬁcantly faster than the state-of-the-art bounded-suboptimal MAPF algorithms ECBS, BCP-7, and eMDD-SAT on a variety of MAPF instances. We hope that the scalability of EECBS enables additional applications for bounded-suboptimal MAPF algorithms.},
	language = {en},
	number = {14},
	urldate = {2023-08-10},
	journal = {Proceedings of the AAAI Conference on Artificial Intelligence},
	author = {Li, Jiaoyang and Ruml, Wheeler and Koenig, Sven},
	month = may,
	year = {2021},
	pages = {12353--12362},
	file = {Li et al. - 2021 - EECBS A Bounded-Suboptimal Search for Multi-Agent.pdf:/Users/andrewsu/Zotero/storage/9RQZLAP8/Li et al. - 2021 - EECBS A Bounded-Suboptimal Search for Multi-Agent.pdf:application/pdf},
}

@inproceedings{gange_lazy_2021,
    author = {Gange, Graeme and Harabor, Daniel and Stuckey, Peter J.},
    title = {Lazy {CBS}: {Implicit} {Conflict}-{Based} {Search} {Using} {Lazy} {Clause} {Generation}},
    booktitle = {Proceedings of the International Conference on Automated Planning and Scheduling},
    year = {2019},
    volume = {29},
    pages = {155--162},
    
}{gange_lazy_2021,
	title = {Lazy {CBS}: {Implicit} {Conflict}-{Based} {Search} {Using} {Lazy} {Clause} {Generation}},
	volume = {29},
	issn = {2334-0843, 2334-0835},
	shorttitle = {Lazy {CBS}},
	url = {https://ojs.aaai.org/index.php/ICAPS/article/view/3471},
	doi = {10.1609/icaps.v29i1.3471},
	abstract = {Conﬂict-based Search (CBS) is a effective approach to optimal multi-agent path ﬁnding. However, performance of CBS approaches degrade rapidly in highly-contended graphs with many agents. One of the reasons this occurs is that CBS does not detect independent subproblems; i.e. it can re-solve the same conﬂicts between the same pairs of agents up to exponentially many times, each time along a different branch. Constraint programming approaches with nogood learning avoid this kind of duplication of effort by storing nogoods that record the reasons for conﬂicts. This can exponentially reduce search in constraint programming. In this work, we present Lazy CBS, a new approach to multi-agent pathﬁnding which replaces the high-level solver of CBS with a lazily constructed constraint programming model with nogoods. We use core-guided depth-ﬁrst search to explore the space of conﬂicts and we detect along each branch reusable nogoods which help to quickly identify feasible solutions. Our experiments show that Lazy CBS can signiﬁcantly improve on the state-of-the-art for optimal MAPF problems under the sumof-costs metric, especially in cases where there exists signiﬁcant contention.},
	language = {en},
	urldate = {2023-08-10},
	journal = {Proceedings of the International Conference on Automated Planning and Scheduling},
	author = {Gange, Graeme and Harabor, Daniel and Stuckey, Peter J.},
	month = may,
	year = {2021},
	pages = {155--162},
	file = {Gange et al. - 2021 - Lazy CBS Implicit Conflict-Based Search Using Laz.pdf:/Users/andrewsu/Zotero/storage/4MUI2DY3/Gange et al. - 2021 - Lazy CBS Implicit Conflict-Based Search Using Laz.pdf:application/pdf},
}

@inproceedings{li_lifelong_2021,
    title = {Lifelong {Multi}-{Agent} {Path} {Finding} in {Large}-{Scale} {Warehouses}},
    volume = {35},
    booktitle = {Proceedings of the AAAI Conference on Artificial Intelligence},
    author = {Li, Jiaoyang and Tinka, Andrew and Kiesel, Scott and Durham, Joseph W. and Kumar, T. K. Satish and Koenig, Sven},
    year = {2021},
    pages = {11272--11281},
}{li_lifelong_2021,
	title = {Lifelong {Multi}-{Agent} {Path} {Finding} in {Large}-{Scale} {Warehouses}},
	volume = {35},
	issn = {2374-3468, 2159-5399},
	url = {https://ojs.aaai.org/index.php/AAAI/article/view/17344},
	doi = {10.1609/aaai.v35i13.17344},
	abstract = {Multi-Agent Path Finding (MAPF) is the problem of moving a team of agents to their goal locations without collisions. In this paper, we study the lifelong variant of MAPF, where agents are constantly engaged with new goal locations, such as in large-scale automated warehouses. We propose a new framework Rolling-Horizon Collision Resolution (RHCR) for solving lifelong MAPF by decomposing the problem into a sequence of Windowed MAPF instances, where a Windowed MAPF solver resolves collisions among the paths of the agents only within a bounded time horizon and ignores collisions beyond it. RHCR is particularly well suited to generating pliable plans that adapt to continually arriving new goal locations. We empirically evaluate RHCR with a variety of MAPF solvers and show that it can produce high-quality solutions for up to 1,000 agents (= 38.9\% of the empty cells on the map) for simulated warehouse instances, signiﬁcantly outperforming existing work.},
	language = {en},
	number = {13},
	urldate = {2023-08-10},
	journal = {Proceedings of the AAAI Conference on Artificial Intelligence},
	author = {Li, Jiaoyang and Tinka, Andrew and Kiesel, Scott and Durham, Joseph W. and Kumar, T. K. Satish and Koenig, Sven},
	month = may,
	year = {2021},
	pages = {11272--11281},
	file = {Li et al. - 2021 - Lifelong Multi-Agent Path Finding in Large-Scale W.pdf:/Users/andrewsu/Zotero/storage/DILNLXTN/Li et al. - 2021 - Lifelong Multi-Agent Path Finding in Large-Scale W.pdf:application/pdf},
}

@inproceedings{wagner_minimizing_2022,
    author = {Wagner, Aidan and Veerapaneni, Rishi and Likhachev, Maxim},
    title = {Minimizing {Coordination} in {Multi}-{Agent} {Path} {Finding} with {Dynamic} {Execution}},
    booktitle = {Proceedings of the AAAI Conference on Artificial Intelligence and Interactive Digital Entertainment},
    year = {2022},
    volume = {18},
    pages = {61--69},
}{wagner_minimizing_2022,
	title = {Minimizing {Coordination} in {Multi}-{Agent} {Path} {Finding} with {Dynamic} {Execution}},
	volume = {18},
	issn = {2334-0924, 2326-909X},
	url = {https://ojs.aaai.org/index.php/AIIDE/article/view/21948},
	doi = {10.1609/aiide.v18i1.21948},
	abstract = {Multi-agent Path Finding (MAPF) is an important problem in large games with many dynamic agents that need to follow space-time trajectories without inter-agent collisions. Modern MAPF solvers plan assuming that agents directly follow the space-time trajectories at known constant speeds without delays or speedups, resulting in rigid plans which need to be replanned if there are changes during execution. Instead we would like agents to be able to follow their computed paths with dynamic velocities while requiring minimal coordination with others to prevent collisions and deadlocks. One way to address this problem is to first produce collision free space-time paths and then compute a coordination controller that prevents collisions and deadlock during dynamic execution. This two step process prevents fully minimizing coordination as the initially planned space-time paths do not reason about coordination and can be arbitrarily bad. We introduce a novel paradigm and show how planning in space-coordination level, rather than space-time, allows us to simultaneously plan paths and a coordination controller. Our method, Space-Level Conflict-Based Search (SL-CBS), builds on the Conflict-Based Search framework and allows us to reason explicitly about coordination, producing paths as well as a coordination controller with bounded suboptimal minimal coordination. We show experimentally that this results in a 20-50\% reduction in coordination compared to the closest state of the art solver.},
	language = {en},
	number = {1},
	urldate = {2023-08-10},
	journal = {Proceedings of the AAAI Conference on Artificial Intelligence and Interactive Digital Entertainment},
	author = {Wagner, Aidan and Veerapaneni, Rishi and Likhachev, Maxim},
	month = oct,
	year = {2022},
	pages = {61--69},
	file = {Wagner et al. - 2022 - Minimizing Coordination in Multi-Agent Path Findin.pdf:/Users/andrewsu/Zotero/storage/D98H57YG/Wagner et al. - 2022 - Minimizing Coordination in Multi-Agent Path Findin.pdf:application/pdf},
}

@inproceedings{ma_multi-agent_2017,
    author = {Ma, Hang and Kumar, T. K. Satish and Koenig, Sven},
    title = {Multi-{Agent} {Path} {Finding} with {Delay} {Probabilities}},
    booktitle = {Proceedings of the AAAI Conference on Artificial Intelligence},
    year = {2017},
    volume = {31},
    pages={3605-3612}
}{ma_multi-agent_2017,
	title = {Multi-{Agent} {Path} {Finding} with {Delay} {Probabilities}},
	volume = {31},
	issn = {2374-3468, 2159-5399},
	url = {https://ojs.aaai.org/index.php/AAAI/article/view/11035},
	doi = {10.1609/aaai.v31i1.11035},
	abstract = {Several recently developed Multi-Agent Path Finding (MAPF) solvers scale to large MAPF instances by searching for MAPF plans on 2 levels: The high-level search resolves collisions between agents, and the low-level search plans paths for single agents under the constraints imposed by the high-level search. We make the following contributions to solve the MAPF problem with imperfect plan execution with small average makespans: First, we formalize the MAPF Problem with Delay Probabilities (MAPF-DP), deﬁne valid MAPF-DP plans and propose the use of robust plan-execution policies for valid MAPF-DP plans to control how each agent proceeds along its path. Second, we discuss 2 classes of decentralized robust plan-execution policies (called Fully Synchronized Policies and Minimal Communication Policies) that prevent collisions during plan execution for valid MAPF-DP plans. Third, we present a 2-level MAPF-DP solver (called Approximate Minimization in Expectation) that generates valid MAPF-DP plans.},
	language = {en},
	number = {1},
	urldate = {2023-08-10},
	journal = {Proceedings of the AAAI Conference on Artificial Intelligence},
	author = {Ma, Hang and Kumar, T. K. Satish and Koenig, Sven},
	month = feb,
	year = {2017},
	file = {Ma et al. - 2017 - Multi-Agent Path Finding with Delay Probabilities.pdf:/Users/andrewsu/Zotero/storage/SR5HIVPS/Ma et al. - 2017 - Multi-Agent Path Finding with Delay Probabilities.pdf:application/pdf},
}

@inproceedings{hoenig_multi-agent_2016,
	title = {Multi-{Agent} {Path} {Finding} with {Kinematic} {Constraints}},
	volume = {26},
	issn = {2334-0843, 2334-0835},
	url = {https://ojs.aaai.org/index.php/ICAPS/article/view/13796},
	doi = {10.1609/icaps.v26i1.13796},
	abstract = {Multi-Agent Path Finding (MAPF) is well studied in both AI and robotics. Given a discretized environment and agents with assigned start and goal locations, MAPF solvers from AI ﬁnd collision-free paths for hundreds of agents with userprovided sub-optimality guarantees. However, they ignore that actual robots are subject to kinematic constraints (such as ﬁnite maximum velocity limits) and suffer from imperfect plan-execution capabilities. We therefore introduce MAPFPOST, a novel approach that makes use of a simple temporal network to postprocess the output of a MAPF solver in polynomial time to create a plan-execution schedule that can be executed on robots. This schedule works on non-holonomic robots, takes their maximum translational and rotational velocities into account, provides a guaranteed safety distance between them, and exploits slack to absorb imperfect plan executions and avoid time-intensive replanning in many cases. We evaluate MAPF-POST in simulation and on differentialdrive robots, showcasing the practicality of our approach.},
	language = {en},
	urldate = {2023-08-10},
	booktitle = {Proceedings of the International Conference on Automated Planning and Scheduling},
	author = {Hoenig, Wolfgang and Kumar, T. K. and Cohen, Liron and Ma, Hang and Xu, Hong and Ayanian, Nora and Koenig, Sven},
	month = mar,
	year = {2016},
	pages = {477--485},
	file = {Hoenig et al. - 2016 - Multi-Agent Path Finding with Kinematic Constraint.pdf:/Users/andrewsu/Zotero/storage/VJGB7T53/Hoenig et al. - 2016 - Multi-Agent Path Finding with Kinematic Constraint.pdf:application/pdf},
}

@inproceedings{zhang_multi-robot_nodate,
	title = {Multi-{Robot} {Coordination} and {Layout} {Design} for {Automated} {Warehousing}},
	language = {en},
	author = {Zhang, Yulun and Fontaine, Matthew C and Bhatt, Varun and Nikolaidis, Stefanos and Li, Jiaoyang},
        booktitle = {Proceedings of the International Joint Conference on Artificial Intelligence},
        year = {},
        pages={5503-5511},
	file = {Zhang et al. - Multi-Robot Coordination and Layout Design for Aut.pdf:/Users/andrewsu/Zotero/storage/DQI37FBA/Zhang et al. - Multi-Robot Coordination and Layout Design for Aut.pdf:application/pdf},
}

@article{okumura_offline_2023,
	title = {Offline {Time}-{Independent} {Multiagent} {Path} {Planning}},
	volume = {39},
	issn = {1552-3098, 1941-0468},
	url = {https://ieeexplore.ieee.org/document/10092929/},
	doi = {10.1109/TRO.2023.3258690},
	abstract = {This study examines a novel planning problem for multiple agents that cannot share holding resources, named Ofﬂine Time-Independent Multiagent Path Planning (OTIMAPP). Given a graph and a set of start-goal pairs, the problem to be addressed is assigning a path to each agent, such that every agent eventually reaches its destination without blocking others, regardless of when each agent starts and ﬁnishes each own action. This motivation stems from timing uncertainties, including the reality gaps between planning and robot execution. In contrast to conventional solution, concepts of multirobot path planning that rely on timings, once OTIMAPP solutions are obtained, they can be executed without any synchronization between robot actions. Moreover, there is a theoretical guarantee that all robots eventually reach their destinations, provided they avoid interrobot collisions. This study attempts to establish OTIMAPP both theoretically and practically. Speciﬁcally, we present a formalization of the problem, solution conditions based on a categorization of deadlocks, computational complexities showing that OTIMAPP is computationally intractable, practical relaxation of the solution concept, two algorithms to solve OTIMAPP based on multiagent pathﬁnding algorithms, empirical results showing large OTIMAPP instances can be solved to some extent, as well as robot demonstrations of asynchronous OTIMAPP execution.},
	language = {en},
	number = {4},
	urldate = {2023-08-10},
	journal = {IEEE Transactions on Robotics},
	author = {Okumura, Keisuke and Bonnet, François and Tamura, Yasumasa and Défago, Xavier},
	month = aug,
	year = {2023},
	pages = {2720--2737},
	file = {Okumura et al. - 2023 - Offline Time-Independent Multiagent Path Planning.pdf:/Users/andrewsu/Zotero/storage/BM9RQULQ/Okumura et al. - 2023 - Offline Time-Independent Multiagent Path Planning.pdf:application/pdf},
}

@inproceedings{ma_searching_2019,
	title = {Searching with {Consistent} {Prioritization} for {Multi}-{Agent} {Path} {Finding}},
	volume = {33},
	issn = {2374-3468, 2159-5399},
	url = {https://ojs.aaai.org/index.php/AAAI/article/view/4758},
	doi = {10.1609/aaai.v33i01.33017643},
	abstract = {We study prioritized planning for Multi-Agent Path Finding (MAPF). Existing prioritized MAPF algorithms depend on rule-of-thumb heuristics and random assignment to determine a ﬁxed total priority ordering of all agents a priori. We instead explore the space of all possible partial priority orderings as part of a novel systematic and conﬂict-driven combinatorial search framework. In a variety of empirical comparisons, we demonstrate state-of-the-art solution qualities and success rates, often with similar runtimes to existing algorithms. We also develop new theoretical results that explore the limitations of prioritized planning, in terms of completeness and optimality, for the ﬁrst time.},
	language = {en},
	number = {01},
	urldate = {2023-08-10},
	booktitle = {Proceedings of the AAAI Conference on Artificial Intelligence},
	author = {Ma, Hang and Harabor, Daniel and Stuckey, Peter J. and Li, Jiaoyang and Koenig, Sven},
	month = jul,
	year = {2019},
	pages = {7643--7650},
	file = {Ma et al. - 2019 - Searching with Consistent Prioritization for Multi.pdf:/Users/andrewsu/Zotero/storage/NE9A55VM/Ma et al. - 2019 - Searching with Consistent Prioritization for Multi.pdf:application/pdf},
}

@inproceedings{okumura_priority_nodate,
	title = {Priority {Inheritance} with {Backtracking} for {Iterative} {Multi}-Agent {Path} {Finding}},
	abstract = {The Multi-agent Path Finding (MAPF) problem consists in all agents having to move to their own destinations while avoiding collisions. In practical applications to the problem, such as for navigation in an automated warehouse, MAPF must be solved iteratively. We present here a novel approach to iterative MAPF, that we call Priority Inheritance with Backtracking (PIBT). PIBT gives a unique priority to each agent every timestep, so that all movements are prioritized. Priority inheritance, which aims at dealing effectively with priority inversion in path adjustment within a small time window, can be applied iteratively and a backtracking protocol prevents agents from being stuck. We prove that, regardless of their number, all agents are guaranteed to reach their destination within ﬁnite time, when the environment is a graph such that all pairs of adjacent nodes belong to a simple cycle of length 3 or more (e.g., biconnected). Our implementation of PIBT can be fully decentralized without global communication. Experimental results over various scenarios conﬁrm that PIBT is adequate both for ﬁnding paths in large environments with many agents, as well as for conveying packages in an automated warehouse.},
	language = {en},
	author = {Okumura, Keisuke and Machida, Manao and Défago, Xavier and Tamura, Yasumasa},
        year = {2019},
        booktitle = {Proceedings of the International Joint Conference on Artificial Intelligence},
        pages={535-542},
	file = {Okumura et al. - Priority Inheritance with Backtracking for Iterati.pdf:/Users/andrewsu/Zotero/storage/X3YVTD93/Okumura et al. - Priority Inheritance with Backtracking for Iterati.pdf:application/pdf},
}

@inproceedings{sajid_multi-agent_2021,
	title = {Multi-{Agent} {Pathfinding} with {Simultaneous} {Execution} of {Single}-{Agent} {Primitives}},
	volume = {3},
	issn = {2832-9163, 2832-9171},
	url = {https://ojs.aaai.org/index.php/SOCS/article/view/18243},
	doi = {10.1609/socs.v3i1.18243},
	abstract = {Multi-agent pathﬁnding is a challenging combinatorial problem that involves multiple agents moving on a graph from a set of initial nodes to a set of desired goals without inter-agent collisions. Searching the composite space of all agents has exponential complexity and does not scale well. Decoupled methods are more efﬁcient but are generally incomplete. There are, however, polynomial time algorithms, which utilize single or few-agents primitives with completeness guarantees. One limitation of these alternatives is that the resulting solution is sequential, where only one agent moves at a time. Such solutions are of low quality when compared to methods where multiple agents can move simultaneously. This work proposes an algorithm for multi-agent pathﬁnding that utilizes similar single-agent primitives but allows all agents to move in parallel. The paper describes the algorithm and its properties. Experimental comparisons suggest that the resulting paths are considerably better than sequential ones, even after a postprocessing, parallelization step, as well as solutions returned by decoupled and coupled alternatives. The experiments also suggest good scalability and competitive computational performance.},
	language = {en},
	number = {1},
	urldate = {2023-08-10},
	booktitle = {Proceedings of the International Symposium on Combinatorial Search},
	author = {Sajid, Qandeel and Luna, Ryan and Bekris, Kostas},
	month = aug,
	year = {2012},
	pages = {88--96},
	file = {Sajid et al. - 2021 - Multi-Agent Pathfinding with Simultaneous Executio.pdf:/Users/andrewsu/Zotero/storage/JCLIGVA7/Sajid et al. - 2021 - Multi-Agent Pathfinding with Simultaneous Executio.pdf:application/pdf},
}

@inproceedings{erdmann_multiple_1986,
	title = {On Multiple Moving Objects},
	volume = {3},
	url = {http://ieeexplore.ieee.org/document/1087401/},
	doi = {10.1109/ROBOT.1986.1087401},
	abstract = {This paper explores the motion planning problem for multiple moving objects. The approach taken consists of assigning priorities to the objects, then planning motions one object a t a time. For each moving object, the planner constructs a configuration space-time that represents the time-varying constraints imposed on the moving object by the other moving and stationary objects. The plannerrepresents this space-time approximately, using two-dimensional slices. The space-time is then searched for a collision-free path. The paper demonstrates this approach in two domains. One domain consists of translating planar objects; the other domain consists of two-link planar articulated arms.},
	language = {en},
	urldate = {2023-08-10},
	booktitle = {Proceedings of the {IEEE} {International} {Conference} on {Robotics} and {Automation}},
	author = {Erdmann, M. and Lozano-Perez, T.},
	year = {1986},
	pages = {1419--1424},
	file = {Erdmann and Lozano-Perez - 1986 - On multiple moving objects.pdf:/Users/andrewsu/Zotero/storage/ZDBCHIVC/Erdmann and Lozano-Perez - 1986 - On multiple moving objects.pdf:application/pdf},
}

@inproceedings{atzmon_robust_2021,
	title = {Robust {Multi}-{Agent} {Path} {Finding}},
	volume = {9},
	issn = {2832-9163, 2832-9171},
	url = {https://ojs.aaai.org/index.php/SOCS/article/view/18445},
	doi = {10.1609/socs.v9i1.18445},
	abstract = {In the multi-agent path-ﬁnding (MAPF) problem, the task is to ﬁnd a plan for moving a set of agents from their initial locations to their goals without collisions. Following this plan, however, may not be possible due to unexpected events that delay some of the agents. We explore the notion of krobust MAPF, where the task is to ﬁnd a plan that can be followed even if a limited number of such delays occur. krobust MAPF is especially suitable for agents with a control mechanism that guarantees that each agent is within a limited number of steps away from its pre-deﬁned plan. We propose sufﬁcient and required conditions for ﬁnding a k-robust plan, and show how to convert several MAPF solvers to ﬁnd such plans. Then, we show the beneﬁt of using a k-robust plan during execution, and for ﬁnding plans that are likely to succeed.},
	language = {en},
	number = {1},
	urldate = {2023-08-10},
	booktitle = {Proceedings of the International Symposium on Combinatorial Search},
	author = {Atzmon, Dor and Stern, Roni and Felner, Ariel and Wagner, Glenn and Bartak, Roman and Zhou, Neng-Fa},
	month = sep,
	year = {2018},
	pages = {2--9},
	file = {Atzmon et al. - 2021 - Robust Multi-Agent Path Finding.pdf:/Users/andrewsu/Zotero/storage/544FCLY4/Atzmon et al. - 2021 - Robust Multi-Agent Path Finding.pdf:application/pdf},
}

@article{dechter_temporal_nodate,
	title = {Temporal constraint networks},
	abstract = {Dechter, R., I. Meiri and J. Pearl, Temporal constraint networks, Artificial Intelligence 49 (1991) 61-95. This paper extends network-based methods of constraint satisfaction to include continuous variables, thus providing a framework for processing temporal constraints. In this framework, called temporal constraint satisfaction problem (TCSP), variables represent time points and temporal information is represented by a set of unary and binary constraints, each specifying a set of permitted intervals. The unique feature of this framework lies in permitting the processing of metric information, namely, assessments of time differences between events. We present algorithms for performing the following reasoning tasks: finding all feasible times that a given event can occur, finding all possible relationships between two given events, and generating one or more scenarios consistent with the information provided.},
	language = {en},
	author = {Dechter, Rina and Meiri, Itay and Pearl, Judea},
	file = {Dechter et al. - Temporal constraint networks.pdf:/Users/andrewsu/Zotero/storage/ZZNKT2TV/Dechter et al. - Temporal constraint networks.pdf:application/pdf},
}

@inproceedings{okumura_time-independent_2021,
	title = {Time-{Independent} {Planning} for {Multiple} {Moving} {Agents}},
	volume = {35},
	issn = {2374-3468, 2159-5399},
	url = {https://ojs.aaai.org/index.php/AAAI/article/view/17347},
	doi = {10.1609/aaai.v35i13.17347},
	abstract = {Typical Multi-agent Path Finding (MAPF) solvers assume that agents move synchronously, thus neglecting the reality gap in timing assumptions, e.g., delays caused by an imperfect execution of asynchronous moves. So far, two policies enforce a robust execution of MAPF plans taken as input: either by forcing agents to synchronize or by executing plans while preserving temporal dependencies. This paper proposes an alternative approach, called time-independent planning, which is both online and distributed. We represent reality as a transition system that changes conﬁgurations according to atomic actions of agents, and use it to generate a timeindependent schedule. Empirical results in a simulated environment with stochastic delays of agents’ moves support the validity of our proposal.},
	language = {en},
	number = {13},
	urldate = {2023-08-10},
	booktitle = {Proceedings of the AAAI Conference on Artificial Intelligence},
	author = {Okumura, Keisuke and Tamura, Yasumasa and Défago, Xavier},
	month = may,
	year = {2021},
	pages = {11299--11307},
	file = {Okumura et al. - 2021 - Time-Independent Planning for Multiple Moving Agen.pdf:/Users/andrewsu/Zotero/storage/3NCEQ2KD/Okumura et al. - 2021 - Time-Independent Planning for Multiple Moving Agen.pdf:application/pdf},
}

@inproceedings{li_scalable_2021,
	title = {Scalable {Rail} {Planning} and {Replanning}: {Winning} the 2020 {Flatland} {Challenge}},
	abstract = {Multi-Agent Path Finding (MAPF) is the combinatorial problem of ﬁnding collision-free paths for multiple agents on a graph. This paper describes MAPF-based software for solving train planning and replanning problems on large-scale rail networks under uncertainty. The software recently won the 2020 Flatland Challenge, a NeurIPS competition trying to determine how to efﬁciently manage dense trafﬁc on rail networks. The software incorporates many state-of-theart MAPF or, in general, optimization technologies, such as prioritized planning, large neighborhood search, safe interval path planning, minimum communication policies, parallel computing, and simulated annealing. It can plan collisionfree paths for thousands of trains within a few minutes and deliver deadlock-free actions in real-time during execution.},
	language = {en},
	author = {Li, Jiaoyang and Chen, Zhe and Zheng, Yi and Chan, Shao-Hung and Harabor, Daniel and Stuckey, Peter J and Ma, Hang and Koenig, Sven},
        year = {2021},
        booktitle = {Proceedings of the International Conference on Automated Planning and Scheduling},
        volume ={31},
        pages={477-485},
	file = {Li et al. - Scalable Rail Planning and Replanning Winning the.pdf:/Users/andrewsu/Zotero/storage/2VHZ6PFB/Li et al. - Scalable Rail Planning and Replanning Winning the.pdf:application/pdf},
}

@inproceedings{varambally_which_2022,
	title = {Which {MAPF} {Model} {Works} {Best} for {Automated} {Warehousing}?},
	volume = {15},
	issn = {2832-9163, 2832-9171},
	url = {https://ojs.aaai.org/index.php/SOCS/article/view/21767},
	doi = {10.1609/socs.v15i1.21767},
	abstract = {Multi-Agent Path Finding (MAPF) algorithms and their variants can ﬁnd high-quality collision-free plans for automated warehousing under simpliﬁed assumptions about the robot dynamics. However, these simplifying assumptions pose challenging implementational issues as the robots cannot follow the plans precisely. Various robust execution frameworks, such as the Action Dependency Graph (ADG) framework, have been proposed to enable the real-world execution of MAPF plans. Under such a framework, it is unclear how the simplifying assumptions affect the performance of the robots. In this work, we ﬁrst argue that the ADG framework provides the same robustness guarantees as the singleagent framework (where plans are generated independently for each robot and collisions are avoided through a reservation table), which is widely used in industry. We then improve the efﬁciency of the ADG framework by integrating it with the Rolling-Horizon Collision-Resolution framework to solve MAPF problems with a persistent stream of online tasks. Using the integrated framework, we compare the standard MAPF model with many of its more complex variants, such as MAPF with rotation, k-robust MAPF, and continuous-time MAPF (taking robot dynamics into account). We examine their effectiveness in improving throughput through realistic simulations of warehouse settings with the Gazebo simulator.},
	language = {en},
	number = {1},
	urldate = {2023-08-10},
	booktitle = {Proceedings of the International Symposium on Combinatorial Search},
	author = {Varambally, Sumanth and Li, Jiaoyang and Koenig, Sven},
	month = jul,
	year = {2022},
	pages = {190--198},
	file = {Varambally et al. - 2022 - Which MAPF Model Works Best for Automated Warehous.pdf:/Users/andrewsu/Zotero/storage/Y2YYLSTA/Varambally et al. - 2022 - Which MAPF Model Works Best for Automated Warehous.pdf:application/pdf},
}
